#[include LISD2W_BTT.cfg]
#[include LISD2W_MELLOW.cfg]
#[include ebb_canbus_v1.2.cfg]
[include mainsail.cfg]
[include bigtreetech-microprobe-v2.cfg]
#[include macro.cfg]
[include bigtreetech-sfs-v2.cfg]
#[include bme680.cfg]


[force_move]
enable_force_move: True

[virtual_sdcard]
path: /home/pi/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[exclude_object]

[gcode_arcs]
resolution: 0.1

[temperature_sensor Pi4]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor SKR2]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[stepper_x]
step_pin: PE2
dir_pin: !PE1
enable_pin: !PE3
microsteps: 16
rotation_distance: 40
endstop_pin: !PC1
position_min: 0
position_max: 240
homing_speed: 10
position_endstop: 0

[stepper_y]
step_pin: PD5
dir_pin: !PD4
enable_pin: !PD6
microsteps: 16
rotation_distance: 40
endstop_pin: !PC3
position_min: 0
position_max: 220
homing_speed: 10
position_endstop: 0

[stepper_z]
step_pin: PA15
dir_pin: PA8
enable_pin: !PD1
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
position_min: -5
position_max: 300
homing_speed: 10

[stepper_z1]
step_pin: PD11
dir_pin: PD10
enable_pin: !PD13
microsteps: 16
rotation_distance: 8

[extruder]
step_pin: PD15
dir_pin: !PD14
enable_pin: !PC7
microsteps: 16
rotation_distance: 29.610
gear_ratio: 60:19
full_steps_per_rotation: 200
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PB3
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA2
#control: watermark
min_temp: 0
max_temp: 280
pressure_advance : 0.016
pressure_advance_smooth_time: 0.040
max_extrude_only_distance: 600

########################################
# BIQU MICROPROBE V2
########################################

[probe] 
pin: ^!PE4 # For V1 version, set to ^PC13 for high-level trigger; for V2 version, set to ^!PC13 for low-level trigger. 
deactivate_on_each_sample: False 
x_offset: -5 # Actual offset of the MicroProbe installation 
y_offset: 25 # Actual offset of the MicroProbe installation 
#z_offset: 1.830 # Actual offset of the MicroProbe installation
speed: 5.0
#samples: 2
#samples_tolerance: 0.05
#samples_tolerance_retries: 3
activate_gcode: 
    Probe_Deploy 
    G4 P500 # Allow 500 milliseconds for the probe to deploy 
deactivate_gcode: 
    Probe_Stow

[heater_bed]
heater_pin: PD7
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA1
#control: watermark
min_temp: 0
max_temp: 120

[fan]
pin: PB6
kick_start_time: 0.500

[heater_fan my_nozzle_fan]
pin: PB4
heater: extruder
heater_temp: 60.0
fan_speed: 1.0

# Due to BTT implementing a Marlin-specific safety feature,
# "anti-reversal stepper protection", this pin needs pulling
# high to pass power to stepper drivers and most FETs

[output_pin motor_power]
pin: PC13
value: 1

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f429xx_170034001950314D35313220-if00

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 20
max_z_accel: 100
square_corner_velocity: 5

#[filament_switch_sensor my_sensor]
#pause_on_runout: False
#runout_gcode: PAUSE
#insert_gcode: PAUSE
#switch_pin: PC2

[pause_resume]
recover_velocity: 50

########################################
# fysetc_mini12864
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PC5, EXP1_3=PB1, EXP1_5=PE10, EXP1_7=PE12, EXP1_9=<GND>,
    EXP1_2=PB0, EXP1_4=PE9, EXP1_6=PE11, EXP1_8=PE13, EXP1_10=<5V>,
    # EXP2 header
    EXP2_1=PA6, EXP2_3=PE7, EXP2_5=PB2, EXP2_7=PC4,   EXP2_9=<GND>,
    EXP2_2=PA5, EXP2_4=PA4, EXP2_6=PA7, EXP2_8=<RST>, EXP2_10=<NC>

# See the sample-lcd.cfg file for definitions of common LCD displays.

[display_status]

[display]
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
contrast: 63
encoder_pins: ^EXP2_3, ^EXP2_5
click_pin: ^!EXP1_2
## Some micro-controller boards may require an spi bus to be specified:
#spi_bus: spi
## Alternatively, some micro-controller boards may work with software spi:
spi_software_miso_pin: EXP2_1
spi_software_mosi_pin: EXP2_6
spi_software_sclk_pin: EXP2_2

[neopixel fysetc_mini12864]
pin: EXP1_6
chain_count: 3
color_order: RGB
initial_RED: 0.5
initial_GREEN: 0.5
initial_BLUE: 0.5

[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
        SET_LED LED=fysetc_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
        SET_LED LED=fysetc_mini12864 RED=0 GREEN=0 BLUE=1 INDEX=2 TRANSMIT=0
        SET_LED LED=fysetc_mini12864 RED=0 GREEN=0 BLUE=1 INDEX=3 


########################################
# TMC2240 configuration
########################################

# [tmc2240 extruder]
# cs_pin: EBBCan: PA15
# spi_software_sclk_pin: EBBCan: PB10
# spi_software_mosi_pin: EBBCan: PB11
# spi_software_miso_pin: EBBCan: PB2
# run_current: 0.650
# stealthchop_threshold: 999999


########################################
# TMC2209 configuration
########################################

[tmc2209 stepper_x]
uart_pin: PE0
run_current: 0.650
hold_current: 0.450
stealthchop_threshold: 999999
interpolate: True
#diag_pin:

[tmc2209 stepper_y]
uart_pin: PD3
run_current: 0.650
hold_current: 0.450
stealthchop_threshold: 999999
interpolate: True
#diag_pin:

[tmc2209 stepper_z]
uart_pin: PD0
run_current: 0.650
hold_current: 0.450
stealthchop_threshold: 999999
interpolate: True
#diag_pin:

[tmc2209 stepper_z1]
uart_pin: PD12
run_current: 0.650
hold_current: 0.450
stealthchop_threshold: 999999
interpolate: True
#diag_pin:

[tmc2209 extruder]
uart_pin: PC6
run_current: 0.650
hold_current: 0.500
stealthchop_threshold: 999999
interpolate: True
#diag_pin:


########################################

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.225000, -0.155000, -0.150000, -0.152500, -0.142500, -0.145000, -0.145000, -0.155000, -0.142500, -0.180000
#*# 	-0.230000, -0.195000, -0.195000, -0.187500, -0.177500, -0.175000, -0.177500, -0.175000, -0.172500, -0.195000
#*# 	-0.242500, -0.212500, -0.200000, -0.202500, -0.195000, -0.192500, -0.185000, -0.195000, -0.175000, -0.200000
#*# 	-0.222500, -0.200000, -0.202500, -0.215000, -0.215000, -0.222500, -0.232500, -0.245000, -0.252500, -0.285000
#*# 	-0.195000, -0.170000, -0.175000, -0.190000, -0.202500, -0.207500, -0.220000, -0.232500, -0.245000, -0.285000
#*# 	-0.237500, -0.217500, -0.195000, -0.202500, -0.197500, -0.197500, -0.192500, -0.200000, -0.195000, -0.225000
#*# 	-0.252500, -0.230000, -0.230000, -0.232500, -0.237500, -0.237500, -0.242500, -0.247500, -0.252500, -0.287500
#*# 	-0.162500, -0.150000, -0.157500, -0.170000, -0.182500, -0.195000, -0.215000, -0.232500, -0.240000, -0.300000
#*# 	-0.130000, -0.095000, -0.115000, -0.125000, -0.130000, -0.147500, -0.152500, -0.162500, -0.185000, -0.227500
#*# 	-0.237500, -0.215000, -0.220000, -0.207500, -0.205000, -0.205000, -0.225000, -0.232500, -0.232500, -0.282500
#*# x_count = 10
#*# y_count = 10
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 5.0
#*# max_x = 209.93
#*# min_y = 25.0
#*# max_y = 205.0
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 22.684
#*# pid_ki = 1.718
#*# pid_kd = 74.857
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 48.087
#*# pid_ki = 0.657
#*# pid_kd = 879.999
#*#
#*# [input_shaper]
#*# shaper_type_x = 2hump_ei
#*# shaper_freq_x = 55.2
#*# shaper_type_y = 2hump_ei
#*# shaper_freq_y = 65.0
#*#
#*# [probe]
#*# z_offset = 0.140




[gcode_macro LOAD_FILAMENT]
variable_load_distance: 40         # Distance to load filament into the extruder
variable_purge_distance: 50        # Distance to purge filament after loading
variable_nozzle_preheat_temp: 220  # Default preheat temperature for the nozzle
variable_turn_off_extruder: True   # Option to turn off the extruder after loading (True/False)
gcode:
    # Parameters and settings
    {% set load_speed = params.LOAD_SPEED|default(600) %}  # Speed in mm/min for fast filament loading
    {% set purge_speed = params.PURGE_SPEED|default(300) %}  # Speed in mm/min for purging filament
    {% set target_temp = params.TARGET_TEMP|default(nozzle_preheat_temp) %}  # Target temperature for the nozzle
    {% set min_temp = params.MIN_TEMP|default(180) %}  # Minimum safe temperature for extrusion

    # Save current state of the printer
    SAVE_GCODE_STATE NAME=load_state

    # Heat directly to the target temperature if it's above the minimum temperature
    {% if target_temp >= min_temp %}
        M104 S{target_temp} ; Set extruder to target temperature
        M109 S{target_temp} ; Wait for extruder to reach target temperature
    {% else %}
        # Heat to minimum temperature first if target is too low
        M104 S{min_temp} ; Set extruder to safe minimum temperature
        M109 S{min_temp} ; Wait for extruder to reach safe minimum temperature
    {% endif %}

    # Begin filament loading process
    G91 ; Set relative positioning for extrusion
    G92 E0 ; Reset extruder position
    G1 E{load_distance} F{load_speed} ; Load filament at the specified loading speed
    G1 E{purge_distance} F{purge_speed} ; Purge filament at the slower purging speed

    # Optionally turn off the extruder heater after loading
    {% if turn_off_extruder %}
        M104 S0 ; Turn off extruder heater
    {% endif %}

    # Restore previous state of the printer
    G90 ; Restore absolute positioning
    RESTORE_GCODE_STATE NAME=load_state

    # Completion message
    M117 Filament load complete


[gcode_macro UNLOAD_FILAMENT]
variable_unload_distance: 100      # Distance to retract filament from the extruder
variable_nozzle_preheat_temp: 220  # Default preheat temperature for unloading
variable_turn_off_extruder: True   # Option to turn off the extruder after unloading (True/False)
gcode:
    # Parameters and settings
    {% set retract_speed = params.RETRACT_SPEED|default(600) %}  # Speed for retracting filament
    {% set target_temp = params.TARGET_TEMP|default(nozzle_preheat_temp) %}  # Target temperature for the nozzle
    {% set min_temp = params.MIN_TEMP|default(180) %}  # Minimum safe temperature for extrusion

    # Save current state of the printer
    SAVE_GCODE_STATE NAME=unload_state

    # Heat the nozzle to the target temperature if required
    {% if printer.extruder.temperature < target_temp %}
        # Ensure the nozzle is heated to the target temperature or at least the minimum safe temperature
        {% if target_temp >= min_temp %}
            M104 S{target_temp} ; Set extruder to target temperature
            M109 S{target_temp} ; Wait for extruder to reach target temperature
        {% else %}
            M104 S{min_temp} ; Set extruder to safe minimum temperature
            M109 S{min_temp} ; Wait for extruder to reach safe minimum temperature
        {% endif %}
    {% endif %}

    # Begin filament unloading process
    G91 ; Set relative positioning for extrusion
    G92 E0 ; Reset extruder position
    G1 E-{unload_distance} F{retract_speed} ; Retract filament at the specified speed

    # Optionally turn off the extruder heater after unloading
    {% if turn_off_extruder %}
        M104 S0 ; Turn off extruder heater
    {% endif %}

    # Restore previous state of the printer
    G90 ; Restore absolute positioning
    RESTORE_GCODE_STATE NAME=unload_state

    # Completion message
    M117 Filament unload complete   


[gcode_macro G29]
gcode:
 BED_MESH_CLEAR
 G28
 BED_MESH_CALIBRATE
 BED_MESH_PROFILE SAVE=default
 
#[gcode_macro G34]
#gcode:
#     G28
#     Z_TILT_ADJUST		


[gcode_macro G35]
gcode:
     G28
     SCREWS_TILT_CALCULATE


[gcode_macro START_PRINT]
# Reference https://github.com/KevinOConnor/klipper/blob/master/docs/Config_Reference.md#gcode_macroA
# On how to override default parameters
gcode:
    SFS_ENABLE
    {% set TBED = params.T_BED|default(0)|float %}
    {% set TEXTRUDER = params.T_EXTRUDER|default(0)|float %}
    # Start bed heating and wait
    M190 S{TBED}
    # Home the printer
	G28
    #Probe Everytime
	#G29 
	#load saved mesh at print start instead of probe. Uncomment to use but comment out G29
	BED_MESH_PROFILE LOAD=default   					 
    # Use absolute coordinates
    G90
    # Move the nozzle near the bed
    G1 X0 Y0 Z5 F1500
    # Move the nozzle very close to the bed
    G1 Z0.15 F300
    # Wait nozzle temp
    M109 S{TEXTRUDER}
    G92 E0 ;Reset Extruder
    G1 X20 Y5 Z0.3 F3000.0			   
    G1 Z0.3 F1000 				    
    G1 X200 Y5 F1500.0 E15 			   
    G1 X200 Y5.3 Z0.3 F3000.0			    
    G1 X5.3  Y5.3 Z0.3 F1500.0 E30 			
    G1 Z3 F1500 				     
    G21 ; set units to millimeters
    G90 ; use absolute coordinates
    M83 ; use relative	distances for extrusion
    G92 E0
    
    
[gcode_macro END_PRINT]
gcode:
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    G91
    G1 E-20 Z100
    G28 X0 Y0
    G1 Y190
    # Disable steppers
    M84
    SFS_DISABLE

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state


[gcode_macro M117]
rename_existing: M117.1
gcode:
  {% if rawparams %}
    {% set escaped_msg = rawparams.split(';', 1)[0].split('\x23', 1)[0]|replace('"', '\\"') %}
    SET_DISPLAY_TEXT MSG="{escaped_msg}"
    RESPOND TYPE=command MSG="{escaped_msg}"
  {% else %}
    SET_DISPLAY_TEXT
  {% endif %}


  ######################################################################
# BMP280/BME280/BME680 Environmental Sensor
######################################################################

# The macro below assumes you have a BME280 sensor_type defined in one
# of the applicable sections in printer.cfg, such as:
#
#[temperature_sensor my_sensor]
#sensor_type: BME680
#gcode_id: AMB
#
# Note the format of the parameter SENSOR in the macro below.  The BME280
# sensor status can be accessed using the format "bme280 <section_name>".
# The example section above is named "my_sensor", thus the bme280 can be
# queried as follows:
#
# QUERY_BME680 SENSOR='bme680 my_sensor'
#
# Since a default parameter is defined one could simply enter QUERY_BME280
# as well.

[gcode_macro QUERY_BME680]
gcode:
    {% set sensor = printer["bme680 my_sensor"] %}
    {action_respond_info(
        "Temperature: %.2f C\n"
        "Pressure: %.2f hPa\n"
        "Humidity: %.2f%%" % (
            sensor.temperature,
            sensor.pressure,
            sensor.humidity))}
         

[gcode_macro Tune_Bed_PLA]
gcode:
    M117 PID Tuning Bed to 60 C
    PID_CALIBRATE HEATER=heater_bed TARGET=60

[gcode_macro Tune_PLA]
gcode:
    M117 PID Tuning Extruder to 195 C
    PID_CALIBRATE HEATER=extruder TARGET=195

[gcode_macro Tune_PETG]
gcode:
    M117 PID Tuning Extruder to 240 C
    PID_CALIBRATE HEATER=extruder TARGET=240

[gcode_macro Tune_Bed_PETG]
gcode:
    M117 PID Tuning Bed to 75 C
    PID_CALIBRATE HEATER=heater_bed TARGET=75
